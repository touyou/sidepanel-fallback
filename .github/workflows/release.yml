name: Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm ci

      - name: Run quality checks
        run: npm run quality

      - name: Run tests
        run: npm test

      - name: Build package
        run: npm run build

      - name: Extract version from tag
        id: version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Update CHANGELOG for release
        run: |
          VERSION=${{ steps.version.outputs.VERSION }}
          DATE=$(date +%Y-%m-%d)
          
          # Create backup
          cp CHANGELOG.md CHANGELOG.md.bak
          
          # Replace [Unreleased] with version and date
          sed -i "s/## \[Unreleased\]/## [$VERSION] - $DATE/" CHANGELOG.md
          
          # Add new Unreleased section
          sed -i "/## \[$VERSION\] - $DATE/i ## [Unreleased]\n" CHANGELOG.md
          sed -i "/## \[Unreleased\]/a \n### Added\n\n### Changed\n\n### Fixed\n\n### Removed\n" CHANGELOG.md
          
          # Update comparison links
          sed -i "s|\[Unreleased\]: https://github.com/touyou/sidepanel-fallback/compare/v.*\.\.\.HEAD|[Unreleased]: https://github.com/touyou/sidepanel-fallback/compare/v$VERSION...HEAD|" CHANGELOG.md
          sed -i "/\[Unreleased\]:/a [$VERSION]: https://github.com/touyou/sidepanel-fallback/compare/v1.0.0...v$VERSION" CHANGELOG.md

      - name: Extract release notes from CHANGELOG
        id: changelog
        run: |
          VERSION=${{ steps.version.outputs.VERSION }}
          awk "/## \[$VERSION\]/, /## \[/ { if (/## \[/ && !/## \[$VERSION\]/) exit; print }" CHANGELOG.md > release_notes.txt
          tail -n +2 release_notes.txt > release_notes_clean.txt
          sed -i '/^$/N;/^\n$/d' release_notes_clean.txt
          
          {
            echo 'NOTES<<EOF'
            cat release_notes_clean.txt
            echo EOF
          } >> $GITHUB_OUTPUT

      - name: Commit CHANGELOG updates
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add CHANGELOG.md
          git commit -m "docs: update CHANGELOG for v${{ steps.version.outputs.VERSION }}" || echo "No changes to commit"

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-build-artifacts-v${{ steps.version.outputs.VERSION }}
          path: dist/
          retention-days: 90

      - name: Publish to npm
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        run: |
          TAG_NAME=${GITHUB_REF#refs/tags/}
          gh release create "$TAG_NAME" \
            --title "Release $TAG_NAME" \
            --notes "${{ steps.changelog.outputs.NOTES }}" \
            --draft=false \
            --prerelease=false \
            dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
