name: Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 1.0.1)'
        required: true
        type: string

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm ci

      - name: Run quality checks
        run: npm run quality

      - name: Run tests
        run: npm test

      - name: Build package
        run: npm run build

      - name: Extract version from tag or input
        id: version
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          else
            echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
          fi

      - name: Extract release notes from CHANGELOG
        id: changelog
        run: |
          VERSION=${{ steps.version.outputs.VERSION }}
          # Extract release notes for this version from existing CHANGELOG
          if grep -q "## \[$VERSION\]" CHANGELOG.md; then
            # Version exists in CHANGELOG, extract its notes
            awk "/## \[$VERSION\]/, /## \[/ { if (/## \[/ && !/## \[$VERSION\]/) exit; print }" CHANGELOG.md > release_notes.txt
            tail -n +2 release_notes.txt > release_notes_clean.txt
            sed -i '/^$/N;/^\n$/d' release_notes_clean.txt
          else
            # Version not found in CHANGELOG, create default release notes
            echo "Release v$VERSION" > release_notes_clean.txt
            echo "" >> release_notes_clean.txt
            echo "See CHANGELOG.md for details." >> release_notes_clean.txt
          fi

          {
            echo 'NOTES<<EOF'
            cat release_notes_clean.txt
            echo EOF
          } >> $GITHUB_OUTPUT

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-build-artifacts-v${{ steps.version.outputs.VERSION }}
          path: dist/
          retention-days: 90

      - name: Publish to npm
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            TAG_NAME="v${{ steps.version.outputs.VERSION }}"
            # For workflow_dispatch, create the tag first
            git tag "$TAG_NAME"
            git push origin "$TAG_NAME"
          else
            TAG_NAME=${GITHUB_REF#refs/tags/}
          fi

          gh release create "$TAG_NAME" \
            --title "Release $TAG_NAME" \
            --notes "${{ steps.changelog.outputs.NOTES }}" \
            --draft=false \
            --prerelease=false \
            dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
